<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xhtml:html xmlns:xforms="http://www.w3.org/2002/xforms"
        xmlns:xhtml="http://www.w3.org/1999/xhtml"
        xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
        xmlns:ev="http://www.w3.org/2001/xml-events"
        xmlns:xs="http://www.w3.org/2001/XMLSchema"
        xmlns:xi="http://www.w3.org/2001/XInclude"
        xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
        xmlns:xbl="http://www.w3.org/ns/xbl"
        xmlns:fr="http://orbeon.org/oxf/xml/form-runner">

    <xhtml:head>
        <xhtml:title>XBL - Autocomplete</xhtml:title>
        <xforms:model id="main-model">

            <!-- Instance used to search countries -->
            <xforms:instance id="search-dynamic">
                <instance><country-name/></instance>
            </xforms:instance>

            <!-- Instance with all the countries -->
            <xforms:instance id="all-countries" src="oxf:/apps/xforms-controls/services/countries.xml"/>
            <!-- Instance with subset of the countries to show in the auto-complete -->
            <xforms:instance id="searched-countries"><empty/></xforms:instance>
            <xforms:instance id="additional-countries">
                <additional-countries>
                    <country>
                        <name>United States</name>
                        <us-code>us2</us-code>
                    </country>
                    <country>
                        <name>Virgin  Islands</name>
                        <us-code>vq2</us-code>
                    </country>
                </additional-countries>
            </xforms:instance>

            <!-- Internal state for this test -->
            <xforms:instance id="selected-countries">
                <selected-countries readonly="false" relevant="true">
                    <static effective-target-id="">ca</static>
                    <dynamic effective-target-id=""/>
                    <resource effective-target-id=""/>
                </selected-countries>
            </xforms:instance>
            <!-- Constraint on selected country -->
            <xforms:bind nodeset="instance('selected-countries')/*" constraint="starts-with(., 's')" readonly="../@readonly = 'true'" relevant="../@relevant = 'true'"/>

            <xforms:instance id="configuration">
                <configuration>
                    <max-results-displayed>4</max-results-displayed>
                </configuration>
            </xforms:instance>

            <!-- Submission getting list of updated countries -->
            <xforms:submission ref="instance('search-dynamic')" id="update-countries" validate="false"
                method="post" resource="/xforms-controls/services/countries" replace="instance" instance="searched-countries"/>

            <!-- Add other countries for testing to list of all countries -->
            <xforms:insert ev:event="xforms-model-construct-done"
                nodeset="instance('all-countries')/country" origin="instance('additional-countries')/*"/>

            <xforms:action ev:event="xforms-ready">
                <!-- NOTE: We don't dispatch fr-set-label to the static-autocomplete since the initial value is already "ca" in the instance -->
                <xforms:dispatch target="dynamic-autocomplete" name="fr-set-label">
                    <xxforms:context name="label" select="'Canada'"/>
                </xforms:dispatch>
                <xforms:dispatch target="resource-autocomplete" name="fr-set-label">
                    <xxforms:context name="label" select="'Canada'"/>
                </xforms:dispatch>
            </xforms:action>

        </xforms:model>
        <xhtml:link type="text/css" rel="stylesheet" href="/ops/yui/logger/assets/logger.css"/>
        <xhtml:script type="text/javascript" src="/ops/yui/logger/logger.js"/>
        <xhtml:script type="text/javascript" src="/ops/yui/event-simulate/event-simulate.js"/>
        <xhtml:script type="text/javascript" src="/ops/yui/yuitest/yuitest.js"/>
        <xhtml:script type="text/javascript" src="/xbl/orbeon/autocomplete/autocomplete-unittest.js"/>
        <xhtml:style type="text/css">
            fieldset { margin-top: 2em }
        </xhtml:style>
    </xhtml:head>
    <xhtml:body>

        <xforms:trigger appearance="minimal" id="toggle-readonly">
            <xforms:label>Toggle readonly</xforms:label>
            <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/@readonly" value="if (. = 'true') then 'false' else 'true'"/>
        </xforms:trigger> |
        <xforms:trigger appearance="minimal" id="toggle-relevant">
            <xforms:label>Toggle relevant</xforms:label>
            <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/@relevant" value="if (. = 'true') then 'false' else 'true'"/>
        </xforms:trigger>

        <xhtml:fieldset>
            <xhtml:legend>Static itemset</xhtml:legend>
            <xhtml:div>
                <xforms:output value="instance('selected-countries')/static" id="static-output">
                    <xforms:label>Code of selected country: </xforms:label>
                </xforms:output>
            </xhtml:div>
            <xhtml:div>
                <xforms:trigger appearance="minimal" id="static-set-to-canada">
                    <xforms:label>Set label to Canada</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="static-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Canada'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="static-set-to-utopia">
                    <xforms:label>Set label to Utopia</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="static-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Utopia'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="static-reset">
                    <xforms:label>Reset</xforms:label>
                    <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/static"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="static-set-to-sz">
                    <xforms:label>Set value to sz</xforms:label>
                    <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/static">sz</xforms:setvalue>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="static-setfocus-outer">
                    <xforms:label>Set focus outer</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="static-autocomplete"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="static-setfocus-inner">
                    <xforms:label>Set focus inner</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/static/@effective-target-id}"/>
                </xforms:trigger>
            </xhtml:div>
            <xhtml:div>
                <xforms:group ref="instance('selected-countries')/static">
                    <xforms:setvalue ev:event="xforms-invalid" ref="@effective-target-id" value="string-join((xxforms:event('xxforms:target-prefixes'), xxforms:event('xxforms:targetid')), '$')"/>
                    <fr:autocomplete ref="." id="static-autocomplete"
                                     dynamic-itemset="false" max-results-displayed="4" tabindex="1">
                        <xforms:label>Country code: </xforms:label>
                        <xforms:itemset nodeset="instance('all-countries')/country">
                            <xforms:label ref="name"/>
                            <xforms:value ref="us-code"/>
                        </xforms:itemset>
                        <xforms:alert>Value is mandatory</xforms:alert>
                    </fr:autocomplete>
                </xforms:group>
            </xhtml:div>
        </xhtml:fieldset>

        <xhtml:fieldset>
            <xhtml:legend>Dynamic itemset, custom</xhtml:legend>
            <xhtml:div>
                <xforms:output value="instance('selected-countries')/dynamic" id="dynamic-output">
                    <xforms:label>Code of selected country: </xforms:label>
                </xforms:output>
            </xhtml:div>
            <xhtml:div>
                <xforms:trigger appearance="minimal" id="dynamic-set-to-canada">
                    <xforms:label>Set label to Canada</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="dynamic-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Canada'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="dynamic-set-to-utopia">
                    <xforms:label>Set label to Utopia</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="dynamic-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Utopia'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="dynamic-reset">
                    <xforms:label>Reset</xforms:label>
                    <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/dynamic"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="dynamic-setfocus-outer">
                    <xforms:label>Set focus outer</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="dynamic-autocomplete"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="dynamic-setfocus-inner">
                    <xforms:label>Set focus inner</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/dynamic/@effective-target-id}"/>
                </xforms:trigger>
            </xhtml:div>
            <xhtml:div>
                <xforms:group ref="instance('selected-countries')/dynamic">
                    <xforms:setvalue ev:event="xforms-invalid" ref="@effective-target-id" value="string-join((xxforms:event('xxforms:target-prefixes'), xxforms:event('xxforms:targetid')), '$')"/>
                    <fr:autocomplete ref="." id="dynamic-autocomplete"
                                     dynamic-itemset="true">
                        <!-- React to user searching -->
                        <xforms:action ev:event="fr-search-changed">
                            <xxforms:variable name="search-value" select="event('fr-search-value')"/>
                            <xxforms:variable name="make-suggestion" select="for $l in string-length($search-value) return $l >= 2 or $l = 0"/>
                            <xforms:action if="$make-suggestion">
                                <!-- Update itemset -->
                                <xxforms:variable name="make-suggestion" select="string-length() >= 2"/>
                                <xforms:setvalue ref="instance('search-dynamic')/country-name" value="$search-value"/>
                                <xforms:send submission="update-countries"/>
                                <xforms:insert context="instance('searched-countries')" nodeset="country"
                                    origin="instance('additional-countries')/country[starts-with(name, $search-value)]"
                                    at="last()" position="after"/>
                            </xforms:action>
                            <xforms:action if="not($make-suggestion)">
                                <!-- Delete itemset -->
                                <xforms:delete nodeset="instance('searched-countries')/country"/>
                            </xforms:action>
                        </xforms:action>

                        <xforms:label>Country code: </xforms:label>
                        <xforms:itemset nodeset="instance('searched-countries')/country">
                            <xforms:label ref="name"/>
                            <xforms:value ref="us-code"/>
                        </xforms:itemset>
                        <xforms:alert>Value is mandatory</xforms:alert>
                        <fr:max-results-displayed ref="instance('configuration')/max-results-displayed"/>
                    </fr:autocomplete>
                </xforms:group>
            </xhtml:div>
        </xhtml:fieldset>

        <xhtml:fieldset>
            <xhtml:legend>Using resource</xhtml:legend>
            <xhtml:div>
                <xforms:output value="instance('selected-countries')/resource" id="resource-output">
                    <xforms:label>Code of selected country: </xforms:label>
                </xforms:output>
            </xhtml:div>
            <xhtml:div>
                <xforms:trigger appearance="minimal" id="resource-set-to-canada">
                    <xforms:label>Set label to Canada</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="resource-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Canada'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="resource-set-to-utopia">
                    <xforms:label>Set label to Utopia</xforms:label>
                    <xforms:dispatch ev:event="DOMActivate" target="resource-autocomplete" name="fr-set-label">
                        <xxforms:context name="label" select="'Utopia'"/>
                    </xforms:dispatch>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="resource-reset">
                    <xforms:label>Reset</xforms:label>
                    <xforms:setvalue ev:event="DOMActivate" ref="instance('selected-countries')/resource"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="resource-setfocus-outer">
                    <xforms:label>Set focus outer</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="resource-autocomplete"/>
                </xforms:trigger> |
                <xforms:trigger appearance="minimal" id="resource-setfocus-inner">
                    <xforms:label>Set focus inner</xforms:label>
                    <xforms:setfocus ev:event="DOMActivate" control="{instance('selected-countries')/resource/@effective-target-id}"/>
                </xforms:trigger>
            </xhtml:div>
            <xhtml:div>
                <xforms:group ref="instance('selected-countries')/resource">
                    <xforms:setvalue ev:event="xforms-invalid" ref="@effective-target-id" value="string-join((xxforms:event('xxforms:target-prefixes'), xxforms:event('xxforms:targetid')), '$')"/>
                    <fr:autocomplete ref="." id="resource-autocomplete" resource="/xforms-controls/services/countries?country-name={$fr-search-value}" max-results-displayed="4">
                        <xforms:label>Country code: </xforms:label>
                        <xforms:itemset nodeset="/countries/country">
                            <xforms:label ref="name"/>
                            <xforms:value ref="us-code"/>
                        </xforms:itemset>
                        <xforms:alert>Value is mandatory</xforms:alert>
                    </fr:autocomplete>
                </xforms:group>
            </xhtml:div>
        </xhtml:fieldset>

        <!-- Invisible label we use to trigger focus out events -->
        <xforms:input id="focus-input" style="height: 1px; width: 1px; overflow: hidden; display: block">
            <xforms:label/>
        </xforms:input>

    </xhtml:body>
</xhtml:html>
