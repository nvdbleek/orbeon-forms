<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2009 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:exforms="http://www.exforms.org/exf/1-0"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         script-type="application/xhtml+xml">

    <xbl:binding id="fr-databound-select1" element="fr|databound-select1">
        <xbl:resources>
            <xbl:style>
                div.xbl-fr-databound-select1 { display: inline; }
            </xbl:style>
        </xbl:resources>
        <xbl:implementation>
            <xforms:model id="xbl-model">
                <!-- Contains the data from which the itemset is populated -->
                <xforms:instance id="itemset"><dummy/></xforms:instance>
                <xforms:instance id="resource"><resource/></xforms:instance>
                <!-- What do when doing a refresh -->
                <xforms:submission id="get-itemset" method="get" resource="{instance('resource')}" replace="instance" serialization="none">
                    <xforms:action ev:event="xforms-submit-error">
                        <xforms:insert nodeset="instance('itemset')" origin="xxforms:element('dummy')"/>
                    </xforms:action>
                </xforms:submission>
            </xforms:model>
        </xbl:implementation>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xforms:group appearance="xxforms:internal" xsl:version="2.0">

                <!-- Stop propagation of all UI events -->
                <xforms:action ev:event="#all" ev:propagate="stop"/>

                <!-- Node to which users bound this component -->
                <xxforms:variable name="binding" as="node()?">
                    <xxforms:sequence select="." xxbl:scope="outer" xbl:attr="model context ref bind"/>
                </xxforms:variable>

                <!-- When the component is initialized or when resources changes, update our internal itemset -->
                <xxforms:variable name="resource-avt" xbl:attr="xbl:text=resource" xxbl:scope="outer"/>
                <xxforms:variable name="resource" xbl:attr="xbl:text=resource">
                    <xxforms:sequence select="xxforms:evaluate-avt($resource-avt)" xxbl:scope="outer"/>
                    <xforms:action ev:event="xforms-enabled xforms-value-changed">
                        <!-- Save resource in model, as it is used as an AVT by the submission -->
                        <xforms:setvalue ref="instance('resource')" value="$resource"/>
                        <!-- Update itemset based on resource -->
                        <xforms:send submission="get-itemset"/>
                        <!-- Get sequence of values in the new itemset -->
                        <xxforms:variable name="nodeset"><xsl:value-of select="/*/xforms:itemset/@nodeset"/></xxforms:variable>
                        <xxforms:variable name="value"><xsl:value-of select="/*/xforms:itemset/xforms:value/(@value | @ref)"/></xxforms:variable>
                        <xxforms:variable name="new-values" select="instance('itemset')/saxon:evaluate($nodeset)/saxon:evaluate($value)"/>
                        <!-- If the current value is not in the new itemset, set it to blank -->
                        <xforms:setvalue if="not($binding = ($new-values, ''))" ref="$binding"/>
                    </xforms:action>
                </xxforms:variable>

                <!-- The concrete select1 -->
                <xxforms:variable name="binding" xxbl:scope="outer"><xxforms:sequence select="$binding" xxbl:scope="inner"/></xxforms:variable>
                <xforms:select1 ref="$binding" xxbl:scope="outer">
                    <xbl:content includes="xforms|label,xforms|help,xforms|hint,xforms|alert"/>
                    <!-- Blank item -->
                    <xforms:item>
                        <xforms:label/>
                        <xforms:value/>
                    </xforms:item>
                    <!-- Itemset unconventionally evaluates wrt inner scope -->
                    <xbl:content includes="xforms|itemset" xxbl:scope="inner"/>
                </xforms:select1>
            </xforms:group>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>
