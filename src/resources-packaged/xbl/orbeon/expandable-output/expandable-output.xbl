<?xml version="1.0" encoding="UTF-8"?>
<!--
  Copyright (C) 2010 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xbl:xbl xmlns:xhtml="http://www.w3.org/1999/xhtml"
         xmlns:xforms="http://www.w3.org/2002/xforms"
         xmlns:xs="http://www.w3.org/2001/XMLSchema"
         xmlns:ev="http://www.w3.org/2001/xml-events"
         xmlns:xi="http://www.w3.org/2001/XInclude"
         xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
         xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
         xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
         xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
         xmlns:saxon="http://saxon.sf.net/"
         xmlns:oxf="http://www.orbeon.com/oxf/processors"
         xmlns:xbl="http://www.w3.org/ns/xbl"
         xmlns:xxbl="http://orbeon.org/oxf/xml/xbl"
         script-type="application/xhtml+xml">
    <xbl:binding id="fr-expandable-output" element="fr|expandable-output">
        <xbl:resources>
            <xbl:style src="/xbl/orbeon/expandable-output/expandable-output.css"/>
        </xbl:resources>
        <xbl:implementation>
            <xforms:model id="fr-expandable–output-model">
                <xforms:instance id="expandable–output-state">
                    <state>
                        <full-value/>
                        <display-value/>
                        <open>false</open>
                        <max-characters/>
                        <tolerance/>
                    </state>
                </xforms:instance>
                <xxforms:variable name="max-characters" select="(max-characters, 0)[. castable as xs:integer][1]"/>
                <xxforms:variable name="tolerance" select="(tolerance, 0)[. castable as xs:integer][1]"/>
                <xxforms:variable name="display-value" select="if (open = 'true') then full-value                               (: Open case :)
                    else if (string-length(full-value) le $max-characters + $tolerance) then full-value                         (: Close case, but not too long :)
                    else for $around-cut-point in substring(full-value, $max-characters, $tolerance) return                     (: Look for space around max-chars with tolerance :)
                    if (contains($around-cut-point, ' '))                                                                       (: If we find a space in the tolerance zone, :)
                    then concat(substring(full-value, 1, $max-characters - 1), substring-before($around-cut-point, ' '), '…')   (: then cut there :)
                    else concat(substring(full-value, 1, $max-characters), '…')                                                 (: Else cut at max-chars and add ellipsis :)"/>
                <xforms:bind ref="display-value" calculate="$display-value"/>
            </xforms:model>
        </xbl:implementation>
        <xbl:template xxbl:transform="oxf:unsafe-xslt">
            <xsl:transform version="2.0">
                <xsl:import href="oxf:/oxf/xslt/utils/xbl.xsl"/>
                <xsl:template match="/*">

                    <!-- Switch outer scope to binding (e.g. for parameters)  -->
                    <xforms:group xbl:attr="model context ref bind" xxbl:scope="outer" appearance="internal">

                        <!-- Point to outer "binding" and inner "state" -->
                        <xxforms:variable name="state" select="." xxbl:scope="inner"/>
                        <xxforms:variable name="binding" as="node()?" xxbl:scope="inner">
                            <xxforms:sequence select="." xxbl:scope="outer" />
                        </xxforms:variable>

                        <!-- Switch inner scope to binding (e.g. for relevance and to set id) -->
                        <xforms:group id="container" ref="$binding" xxbl:scope="inner">

                            <xsl:copy-of select="@class"/>

                            <!-- Copy parameter values to state -->
                            <xforms:group appearance="xxforms:internal">
                                <xsl:copy-of select="xxbl:parameter(., 'max-characters')"/>
                                <xforms:setvalue ev:event="xforms-enabled xforms-value-changed" ref="$state/max-characters" value="$max-characters"/>
                            </xforms:group>
                            <xforms:group appearance="xxforms:internal">
                                <xsl:copy-of select="xxbl:parameter(., 'tolerance')"/>
                                <xforms:setvalue ev:event="xforms-enabled xforms-value-changed" ref="$state/tolerance" value="$tolerance"/>
                            </xforms:group>

                            <xforms:setvalue ev:event="xforms-enabled xforms-value-changed" ref="$state/full-value" value="$binding"/>
                            <xbl:content includes="xforms|label, xforms|help, xforms|hint, xforms|alert"/>
                            <xhtml:span class="xbl-fr-expandable-output-output">
                                <xforms:output ref="$state/display-value"/>
                                <xforms:trigger ref=".[$state/open = 'false' and string-length($state/full-value) gt string-length($state/display-value)]" appearance="minimal">
                                    <xforms:label>Show more</xforms:label>
                                    <xforms:setvalue ev:event="DOMActivate" ref="$state/open">true</xforms:setvalue>
                                </xforms:trigger>
                            </xhtml:span>
                        </xforms:group>
                    </xforms:group>
                </xsl:template>
            </xsl:transform>
        </xbl:template>
    </xbl:binding>
</xbl:xbl>