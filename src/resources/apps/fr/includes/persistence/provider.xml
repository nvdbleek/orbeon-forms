<!--
  Copyright (C) 2011 Orbeon, Inc.

  This program is free software; you can redistribute it and/or modify it under the terms of the
  GNU Lesser General Public License as published by the Free Software Foundation; either version
  2.1 of the License, or (at your option) any later version.

  This program is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  See the GNU Lesser General Public License for more details.

  The full text of the license is available at http://www.gnu.org/copyleft/lesser.html
  -->
<xforms:model xmlns:xs="http://www.w3.org/2001/XMLSchema"
              xmlns:xforms="http://www.w3.org/2002/xforms"
              xmlns:ev="http://www.w3.org/2001/xml-events"
              xmlns:exforms="http://www.exforms.org/exf/1-0"
              xmlns:xxforms="http://orbeon.org/oxf/xml/xforms"
              xmlns:xi="http://www.w3.org/2001/XInclude"
              xmlns:xxi="http://orbeon.org/oxf/xml/xinclude"
              xmlns:f="http://orbeon.org/oxf/xml/formatting"
              xmlns:xhtml="http://www.w3.org/1999/xhtml"
              xmlns:saxon="http://saxon.sf.net/"
              xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
              xmlns:fr="http://orbeon.org/oxf/xml/form-runner"
              xmlns:pipeline="java:org.orbeon.oxf.processor.pipeline.PipelineFunctionLibrary">

    <xxforms:variable name="parameters" select="xxforms:instance('fr-parameters-instance')"/>
    <xxforms:variable name="app" select="$parameters/app"/>
    <xxforms:variable name="form" select="$parameters/form"/>
    <xxforms:variable name="document" select="$parameters/document"/>

    <xforms:action ev:event="xforms-model-construct-done fr-update-persistence-provider">

        <!-- Get configuration properties for form/data -->
        <xxforms:variable name="metadata-instance" select="xxforms:instance('fr-form-instance')/xhtml:head/xforms:model/xforms:instance[@id = 'fr-form-metadata']/metadata"/>
        <xforms:action xxforms:iterate="('form', 'data', 'publish')">
            <!-- What are we saving? Result is either 'form' or 'data' -->
            <xxforms:variable name="form-or-data-or-publish" select="."/>
            <xxforms:variable name="form-or-data-type" select="if ($form-or-data-or-publish = 'publish') then 'form' else $form-or-data-or-publish"/>
            <!-- Determine the app/form -->
            <xxforms:variable name="persistence-app" select="if ($form-or-data-or-publish = 'publish') then string($metadata-instance/application-name) else $app"/>
            <xxforms:variable name="persistence-form" select="if ($form-or-data-or-publish = 'publish') then string($metadata-instance/form-name) else $form"/>
            <!-- Element from fr-provider-instance that contains the form or data provider information -->
            <xxforms:variable name="form-or-data-or-publish-element" select="instance('fr-provider-instance')/*[local-name() = $form-or-data-or-publish] treat as element()"/>
            <!-- Extract provider name and uri -->
            <xforms:setvalue ref="$form-or-data-or-publish-element/provider" value="xxforms:property(string-join(('oxf.fr.persistence.provider', $persistence-app, $persistence-form, $form-or-data-type), '.'))"/>
            <xforms:setvalue ref="$form-or-data-or-publish-element/uri" value="xxforms:property(string-join(('oxf.fr.persistence', $form-or-data-or-publish-element/provider, 'uri'), '.'))"/>
            <!-- Extract provider parameters -->
            <xforms:delete nodeset="$form-or-data-or-publish-element/parameters/*"/>
            <!-- Only look for provider's parameters if we have a provider (we don't have one for publish if we're not in Form Builder) -->
            <xforms:action if="$form-or-data-or-publish-element/provider != ''">
                <xxforms:variable name="property-prefix" select="concat('oxf.fr.persistence.', $form-or-data-or-publish-element/provider)"/>
                <xxforms:variable name="property-names" select="pipeline:propertiesStartsWith($property-prefix)"/>
                <xforms:action xxforms:iterate="$property-names">
                    <!-- Add upper cases to every first word to be consistent with HTTP header conventions (exist-uri becomes Exist-Uri) -->
                    <xxforms:variable name="parameter-name-lower" select="substring-after(., concat($property-prefix, '.'))"/>
                    <xxforms:variable name="parameter-name-upper" select="
                        string-join(
                            for $t in tokenize($parameter-name-lower, '-')
                            return concat(upper-case(substring($t, 1, 1)), substring($t, 2))
                        , '-')"/>
                    <xxforms:variable name="parameter-name" select="concat('Orbeon-', $parameter-name-upper)"/>
                    <xforms:action if="$parameter-name-lower != 'uri'">
                        <xxforms:variable name="parameter-value" select="xxforms:property(.)"/>
                        <xforms:insert context="$form-or-data-or-publish-element/parameters" origin="xxforms:element('parameter', (xxforms:attribute('name', $parameter-name), xxforms:attribute('value', $parameter-value)))"/>
                    </xforms:action>
                </xforms:action>
            </xforms:action>
        </xforms:action>
        <!-- Initialize new service URI -->
        <xforms:setvalue ref="instance('fr-provider-instance')/new-service-uri" value="xxforms:property(string-join(('oxf.fr.detail.new.service.uri', $app, $form), '.'))"/>

    </xforms:action>

    <!-- Persistence provider -->
    <xforms:instance id="fr-provider-instance">
        <provider xmlns="">
            <form>                  <!-- Provider for form definition -->
                <provider/>         <!-- Name of the provider, e.g. exist, oracle -->
                <uri/>              <!-- URI of an implementation, e.g. /fr/service/exist -->
                <parameters/>       <!-- Contains <parameter @name="" @value="">, e.g. for eXist URI, or datasource -->
            </form>
            <data>                  <!-- Provider for data definition -->
                <provider/>         <!-- Follows the same structure as <form> above -->
                <uri/>
                <parameters/>
            </data>
            <publish>               <!-- Provider used when publishing the form, only used in Form Builder -->
                <provider/>         <!-- Follows the same structure as <form> above -->
                <uri/>
                <parameters/>
            </publish>
            <new-service-uri/>      <!-- Service to call to get new instance, if enabled -->
        </provider>
    </xforms:instance>

</xforms:model>